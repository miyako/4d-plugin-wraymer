/* --------------------------------------------------------------------------------
 #
 #	4DPlugin-wraycam.h
 #	source generated by 4D Plugin Wizard
 #	Project : wraycam
 #	author : miyako
 #	2019/12/05
 #  
 # --------------------------------------------------------------------------------*/

#ifndef PLUGIN_WRAYCAM_H
#define PLUGIN_WRAYCAM_H

#include "4DPluginAPI.h"
#include "4DPlugin-JSON.h"
#include <mutex>

#pragma mark -

void wraycam_Get_version(PA_PluginParameters params);
void wraycam_Get_devices(PA_PluginParameters params);
void wraycam_Open(PA_PluginParameters params);
void wraycam_Close(PA_PluginParameters params);

void wraycam_Get_info(PA_PluginParameters params);
void wraycam_Get_property(PA_PluginParameters params);
void wraycam_Set_property(PA_PluginParameters params);
void wraycam_Get_option(PA_PluginParameters params);
void wraycam_Set_option(PA_PluginParameters params);
void wraycam_Start(PA_PluginParameters params);
void wraycam_Stop(PA_PluginParameters params);
void wraycam_Pause(PA_PluginParameters params);
void wraycam_Snap(PA_PluginParameters params);
void wraycam_Trigger(PA_PluginParameters params);
void wraycam_Flush(PA_PluginParameters params);
void wraycam_Get_image(PA_PluginParameters params);
void wraycam_Correct_flat_field(PA_PluginParameters params);
void wraycam_Correct_dark_field(PA_PluginParameters params);
void wraycam_Auto_level_range(PA_PluginParameters params);
void wraycam_Set_LED_state(PA_PluginParameters params);

#endif /* PLUGIN_WRAYCAM_H */
